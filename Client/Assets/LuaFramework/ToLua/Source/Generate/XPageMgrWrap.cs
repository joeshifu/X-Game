//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class XPageMgrWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(XPageMgr), typeof(System.Object));
		L.RegFunction("GetNeedBackCount", GetNeedBackCount);
		L.RegFunction("ShowPage", ShowPage);
		L.RegFunction("HideCurrPage", HideCurrPage);
		L.RegFunction("HidePage", HidePage);
		L.RegFunction("CloseAllPages", CloseAllPages);
		L.RegFunction("Destroy", Destroy);
		L.RegFunction("New", _CreateXPageMgr);
		L.RegFunction("__tostring", Lua_ToString);
		L.RegVar("currShowXPage", get_currShowXPage, set_currShowXPage);
		L.RegVar("m_pageNeedBackPool", get_m_pageNeedBackPool, set_m_pageNeedBackPool);
		L.RegVar("m_pageDic", get_m_pageDic, set_m_pageDic);
		L.RegVar("Inst", get_Inst, null);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateXPageMgr(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 0)
			{
				XPageMgr obj = new XPageMgr();
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: XPageMgr.New");
			}
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetNeedBackCount(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			XPageMgr obj = (XPageMgr)ToLua.CheckObject(L, 1, typeof(XPageMgr));
			int o = obj.GetNeedBackCount();
			LuaDLL.lua_pushinteger(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ShowPage(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			XPageMgr obj = (XPageMgr)ToLua.CheckObject(L, 1, typeof(XPageMgr));
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			string arg1 = ToLua.CheckString(L, 3);
			obj.ShowPage(arg0, arg1);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int HideCurrPage(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			XPageMgr obj = (XPageMgr)ToLua.CheckObject(L, 1, typeof(XPageMgr));
			bool o = obj.HideCurrPage();
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int HidePage(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			XPageMgr obj = (XPageMgr)ToLua.CheckObject(L, 1, typeof(XPageMgr));
			string arg0 = ToLua.CheckString(L, 2);
			obj.HidePage(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int CloseAllPages(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			XPageMgr obj = (XPageMgr)ToLua.CheckObject(L, 1, typeof(XPageMgr));
			obj.CloseAllPages();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Destroy(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			XPageMgr obj = (XPageMgr)ToLua.CheckObject(L, 1, typeof(XPageMgr));
			obj.Destroy();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Lua_ToString(IntPtr L)
	{
		object obj = ToLua.ToObject(L, 1);

		if (obj != null)
		{
			LuaDLL.lua_pushstring(L, obj.ToString());
		}
		else
		{
			LuaDLL.lua_pushnil(L);
		}

		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_currShowXPage(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			XPageMgr obj = (XPageMgr)o;
			XPage ret = obj.currShowXPage;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index currShowXPage on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_m_pageNeedBackPool(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			XPageMgr obj = (XPageMgr)o;
			System.Collections.Generic.Stack<XPage> ret = obj.m_pageNeedBackPool;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index m_pageNeedBackPool on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_m_pageDic(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			XPageMgr obj = (XPageMgr)o;
			System.Collections.Generic.Dictionary<string,XPage> ret = obj.m_pageDic;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index m_pageDic on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Inst(IntPtr L)
	{
		try
		{
			ToLua.PushObject(L, XPageMgr.Inst);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_currShowXPage(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			XPageMgr obj = (XPageMgr)o;
			XPage arg0 = (XPage)ToLua.CheckObject(L, 2, typeof(XPage));
			obj.currShowXPage = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index currShowXPage on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_m_pageNeedBackPool(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			XPageMgr obj = (XPageMgr)o;
			System.Collections.Generic.Stack<XPage> arg0 = (System.Collections.Generic.Stack<XPage>)ToLua.CheckObject(L, 2, typeof(System.Collections.Generic.Stack<XPage>));
			obj.m_pageNeedBackPool = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index m_pageNeedBackPool on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_m_pageDic(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			XPageMgr obj = (XPageMgr)o;
			System.Collections.Generic.Dictionary<string,XPage> arg0 = (System.Collections.Generic.Dictionary<string,XPage>)ToLua.CheckObject(L, 2, typeof(System.Collections.Generic.Dictionary<string,XPage>));
			obj.m_pageDic = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index m_pageDic on a nil value" : e.Message);
		}
	}
}

